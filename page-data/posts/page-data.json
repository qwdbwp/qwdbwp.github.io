{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"ad083eb6-6f88-5d26-9605-ac6b46cdc88a","excerpt":"알고리즘 정의: 유한한 시간 안에 적절한 입력을 받아 필요한 출력을 얻는 문제를 풀기 위한 명확한 명령들의 나열 각각의 단계는 중의성이 없는 명령이어야 함 알고리즘이 동작하는 입력의 범위가 명시되어야 함 같은 알고리즘도 다른 방식으로 표현할 수 있음 같은 문제를 해결하기 위한 알고리즘도 여러 방식이 있을 수 있음 알고리즘의 속성 유한성: 유한한 step 이후 정지해야 함 명확성: 모호하지 않고 정확해야 함 유효한 입력이 명확하게 명시되어야 함 기대하는 출력이 명시되어야 함 효율성: 명령 하나하나는 간결해야 함 알고리즘을 공부해야 하는 이유 실용적 이유: 중요한 알고리즘의 표준 집합을 알아야 함, 새로운 알고리즘을 디자인하고 효율성을 분석해야 함 이론적 이유: 알고리즘은 컴퓨터과학의 초석이 되는 학문임, 분석하는 능력을 기를 수 있음 알고리즘의 해결 과정 문제를 이해: 문제의 special cases를 생각해 보기 알려진 알고리즘이 있다면 사용하고, 없다면 만들어야 함 대부분의 입력…","fields":{"slug":"/algorithm-definition-and-properties/"},"frontmatter":{"categories":"Algorithms","title":"[Algorithms 알고리즘] 알고리즘의 정의와 성질","date":null}},"next":{"fields":{"slug":"/datastructure-list/"}},"previous":null},{"node":{"id":"e3a35f05-62f3-5066-b9ff-f533ac78964e","excerpt":"List Array(배열) element의 index에 의해 순서가 유지된다 장점: Search가 매우 효율적 단점: 삽입과 삭제가 복잡하고 비효율적 → 리스트가 자주 변화될 때는 잘 사용하지 않음 Linked list: ordered collection of data in which each element contains the location of the next element Consist of Data & links Links: chain the data together, contain pointers that identify the next element Linear linked lists: each element has only zero or one successor Non-linear linked list: each element can have zero, one or more successors 장점: 삽입과 삭제가 쉬움, 새로운 element를 위해 shift하지 …","fields":{"slug":"/datastructure-list/"},"frontmatter":{"categories":"data_structure","title":"[Data Structure 자료구조] List와 Linked list","date":"January 30, 2023"}},"next":null,"previous":{"fields":{"slug":"/algorithm-definition-and-properties/"}}}],"categories":["All","Algorithms","data_structure"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}